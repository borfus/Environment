# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

############################## PATH ##############################

# Java Paths
PATH=$PATH:/usr/lib/jvm/java-11-openjdk-amd64/bin
PATH=$PATH:/usr/lib/jvm/java-8-openjdk-amd64/bin

# Script path
PATH=$PATH:~/scripts
PATH=$PATH:/home/borfus/.local/bin

# Remove duplicate paths from $PATH
PATH="$(perl -e 'print join(":", grep { not $seen{$_}++ } split(/:/, $ENV{PATH}))')"

# 010 Editor 
PATH=$PATH:/home/borfus/010editor;export PATH; # ADDED BY INSTALLER - DO NOT EDIT OR DELETE THIS COMMENT - 87FF8EFC-483D-BCAA-D67D-735CF60410D1 DEB385BD-25BD-6270-356F-72EFDB692649

############################# ENV VARS ############################

export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git -g ""'

############################## SHELL ##############################

# History timestamp
export HISTTIMEFORMAT="%d/%m/%y %T "

# Add color to ls command
export CLICOLOR=1

# Enable console coloring
force_color_prompt=yes

# Total history line storage - default 2000
HISTFILESIZE=50000

# Hide User/Group in shell
PS1='\[\e[32m\][\w] \$ \[\e[0m\]'

# Nvidia Shader Cache
export __GL_SHADER_DISK_CACHE_PATH='/home/borfus/shader-cache'
export __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1

############################## ALIAS ##############################

# Quickly access .bash_profile
alias vibash='nvim ~/.bashrc && source ~/.bashrc'

# Open i3 config
alias i3conf='nvim ~/.config/i3/config'

# Open notes.txt file quickly
alias vinotes='nvim ~/notes.txt'

# Quickly access .vimrc
alias vimrc='nvim ~/.vimrc'

# Quickly access .inputrc
alias vimput='nvim ~/.inputrc'

# Alias to change vim to run nvim since I'm too used to typing vim
alias vim='nvim'
alias ovim='/usr/bin/vim'

# Color search with grep
alias grip='grep -rn --color=always --ignore-case'

# Color search java files with grep
alias javagrip='grep -rn --color=always --ignore-case --include=\*.java'

# Color search c files with grep
alias cgrip='grep -rn --color=always --ignore-case --include=\*.c'

# Color search h files with grep
alias hgrip='grep -rn --color=always --ignore-case --include=\*.h'

# Easy file finding
alias qfind='sudo find . -iname'
alias afind='sudo find / -iname'

# Quick list
alias la='ls -a'
alias ll='ls -lathr'

# Quick find process
alias psa='ps -a | grep'

# Easy Navigation for bash
alias ..='cd ../'                   # Go back 1 directory level
alias .2='cd ../../'                # Go back 2 directory levels
alias .3='cd ../../../'             # Go back 3 directory levels
alias .4='cd ../../../../'          # Go back 4 directory levels
alias .5='cd ../../../../../'       # Go back 5 directory levels
alias .6='cd ../../../../../../'    # Go back 6 directory levels
alias c='clear'                     # c: Clear terminal display

# Quick dir navigate
alias f='xdg-open .'                # f: Opens current directory in finder
#alias f='ranger'                    # f: Opens current directory in finder
alias ~="cd ~"                      # ~: Go Home
alias desk='cd ~/Desktop/'
alias down='cd ~/Downloads/'
alias dp="cd /DevProjects/"

# Quickly extract tar.gz file
alias untar='tar xvf'

# Alias because I'll eventually forget the name of this program
alias img='geeqie'

alias ports='sudo lsof -i -P -n | grep LISTEN'

# Change diff to icdiff
alias diff='icdiff -N'

# Copy input to clipboard
alias pbcopy="xclip -sel clip"

# Quickly clear trash bin
alias rmtrash='rm -rf ~/.local/share/Trash/*'

# Quickly install .deb file
alias deb='sudo dpkg -i'

# Quickly update/upgrade
alias in='sudo apt-get install'
alias up='sudo apt-get update'
alias ug='sudo apt-get upgrade'
alias dup='sudo apt-get dist-upgrade'
alias ar='sudo apt-get autoremove'
alias search='apt-cache search'
alias flatup='flatpak update'

# Pass in OP token after sign-in
alias qop='eval $(op signin my) --output=raw'

# Fix lineendings
alias linefix='sed -i -e "s/\r$//"'

# Quick CPU temp
alias temp='acpi -t'

# Quick Wi-Fi
alias wifi='nmtui'
alias wificli='nmcli device wifi' #use connect 'ssid' password 'password'

# Quick clear history
alias rmhistory='cat /dev/null > ~/.bash_history && history -c'

# Update and sync local time
alias timefix='sudo ntpd -qg'

# Gitk & but quicker
alias gitdiff='gitk &'

# Enable wifi (useful for recovery mode)
alias enablewifi='sudo service network-manager start'

## Python ##

# Shorthand for Python 3 and 2
alias py='/usr/bin/python3'
alias py2='/usr/bin/python'

alias uuidgenlower='uuidgen | tr "[:upper:]" "[:lower:]"'

# Protontricks alias for Steam
alias protontricks-flat='flatpak run --command=protontricks com.valvesoftware.Steam --no-runtime'

# System76 Power Profiles
alias powerh='system76-power profile performance'
alias powerm='system76-power profile balanced'
alias powerl='system76-power profile battery'
alias graphn='system76-power graphics nvidia'
alias graphh='system76-power graphics hybrid'
alias graphi='system76-power graphics integrated'
alias power='system76-power profile'
alias cputemp='watch -n 2 sensors'
alias gputemp='watch -n 2 nvidia-smi'

# System76 BIOS Update
alias biosupdate='system76-firmware-cli schedule'

############################# END ALIAS #############################

############################## SCRIPTS ##############################

# Use fzf to open files
ff() { du -a ~ /DevProjects | awk '{print $2}' | fzf | xargs -r nvim; }

# mcd: Makes new Dir and jumps inside
mcd() { mkdir -p "$1" && cd "$1"; }

# mvnotes: Move the notes.txt file to the notes folder with a new name
mvnotes() { mv ~/notes.txt ~/notes/$1; }

# Call `fzip foldername` to zip a folder
fzip() { zip -r $1{.zip,}; }

# Search and replace strings in files recursively
sr() { find . -type f -exec sed -i -e 's#'"$1"\#"$2"'#g' {} \;; }

# Search and replace filenames recursively
srf() { find . -depth -name \*"$1"\* -execdir bash -c 'mv -i "$1" "${1//'"$1"/"$2"'}"' bash {} \;; }

# Convert a hex file to base64 then back to the original file
hex2file() { cat "$1" | xxd -r -p | base64 | base64 --decode > "$2"; }

# Prepend text to file
prep() { echo "$2" | cat - $1 > temp && mv temp $1; }

# Search git diffs and grep text
gitgrep() { git log -S"$1" -p --all; }

# Quickly open pdf with Zathura
pdf() { zathura "$1" & }

# Remove all files (recursively) with a specific pattern
rmpat() { find . -name "$1" -delete; }

# Allow a port through firewall
addport() { sudo ufw allow "$1"; }

# Kill all processes using a specific port
killport() { kill $(lsof -t -i :"$1"); }

# Find a file by name
findq() { sudo find . -name "$1" 2>/dev/null; }
finda() { sudo find / -name "$1" 2>/dev/null; }

# Extend regex
shopt -s extglob

# Git branch tab-completion
[ -f ~/.git-completion.bash ] && . ~/.git-completion.bash

############################ AUTO SETUP #############################

# fzf setup
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# Cargo setup
. "$HOME/.cargo/env"

# nvm setup
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

